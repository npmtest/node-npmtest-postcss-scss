{"/home/travis/build/npmtest/node-npmtest-postcss-scss/test.js":"/* istanbul instrument in package npmtest_postcss_scss */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/lib.npmtest_postcss_scss.js":"/* istanbul instrument in package npmtest_postcss_scss */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_postcss_scss = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_postcss_scss = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-postcss-scss && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_postcss_scss */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_postcss_scss\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_postcss_scss.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_postcss_scss.rollup.js'] =\n            local.assetsDict['/assets.npmtest_postcss_scss.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_postcss_scss.__dirname + '/lib.npmtest_postcss_scss.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-syntax.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _scssStringify = require('./scss-stringify');\n\nvar _scssStringify2 = _interopRequireDefault(_scssStringify);\n\nvar _scssParse = require('./scss-parse');\n\nvar _scssParse2 = _interopRequireDefault(_scssParse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = { parse: _scssParse2.default, stringify: _scssStringify2.default };\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjc3Mtc3ludGF4LmVzNiJdLCJuYW1lcyI6WyJwYXJzZSIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0FBQ0E7Ozs7OztrQkFFZSxFQUFFQSwwQkFBRixFQUFTQyxrQ0FBVCxFIiwiZmlsZSI6InNjc3Mtc3ludGF4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3Njc3Mtc3RyaW5naWZ5JztcbmltcG9ydCBwYXJzZSAgICAgZnJvbSAnLi9zY3NzLXBhcnNlJztcblxuZXhwb3J0IGRlZmF1bHQgeyBwYXJzZSwgc3RyaW5naWZ5IH07XG4iXX0=\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-stringify.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = scssStringify;\n\nvar _scssStringifier = require('./scss-stringifier');\n\nvar _scssStringifier2 = _interopRequireDefault(_scssStringifier);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction scssStringify(node, builder) {\n    var str = new _scssStringifier2.default(builder);\n    str.stringify(node);\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjc3Mtc3RyaW5naWZ5LmVzNiJdLCJuYW1lcyI6WyJzY3NzU3RyaW5naWZ5Iiwibm9kZSIsImJ1aWxkZXIiLCJzdHIiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiI7OztrQkFFd0JBLGE7O0FBRnhCOzs7Ozs7QUFFZSxTQUFTQSxhQUFULENBQXVCQyxJQUF2QixFQUE2QkMsT0FBN0IsRUFBc0M7QUFDakQsUUFBSUMsTUFBTSw4QkFBb0JELE9BQXBCLENBQVY7QUFDQUMsUUFBSUMsU0FBSixDQUFjSCxJQUFkO0FBQ0giLCJmaWxlIjoic2Nzcy1zdHJpbmdpZnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2Nzc1N0cmluZ2lmaWVyIGZyb20gJy4vc2Nzcy1zdHJpbmdpZmllcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNjc3NTdHJpbmdpZnkobm9kZSwgYnVpbGRlcikge1xuICAgIGxldCBzdHIgPSBuZXcgU2Nzc1N0cmluZ2lmaWVyKGJ1aWxkZXIpO1xuICAgIHN0ci5zdHJpbmdpZnkobm9kZSk7XG59XG4iXX0=\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-stringifier.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _stringifier = require('postcss/lib/stringifier');\n\nvar _stringifier2 = _interopRequireDefault(_stringifier);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScssStringifier = function (_Stringifier) {\n    _inherits(ScssStringifier, _Stringifier);\n\n    function ScssStringifier() {\n        _classCallCheck(this, ScssStringifier);\n\n        return _possibleConstructorReturn(this, _Stringifier.apply(this, arguments));\n    }\n\n    ScssStringifier.prototype.comment = function comment(node) {\n        var left = this.raw(node, 'left', 'commentLeft');\n        var right = this.raw(node, 'right', 'commentRight');\n\n        if (node.raws.inline) {\n            var text = node.raws.text || node.text;\n            this.builder('//' + left + text + right, node);\n        } else {\n            this.builder('/*' + left + node.text + right + '*/', node);\n        }\n    };\n\n    ScssStringifier.prototype.decl = function decl(node, semicolon) {\n        if (!node.isNested) {\n            _Stringifier.prototype.decl.call(this, node, semicolon);\n        } else {\n\n            var between = this.raw(node, 'between', 'colon');\n            var string = node.prop + between + this.rawValue(node, 'value');\n            if (node.important) {\n                string += node.raws.important || ' !important';\n            }\n\n            this.builder(string + '{', node, 'start');\n\n            var after = void 0;\n            if (node.nodes && node.nodes.length) {\n                this.body(node);\n                after = this.raw(node, 'after');\n            } else {\n                after = this.raw(node, 'after', 'emptyBody');\n            }\n            if (after) this.builder(after);\n            this.builder('}', node, 'end');\n        }\n    };\n\n    return ScssStringifier;\n}(_stringifier2.default);\n\nexports.default = ScssStringifier;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjc3Mtc3RyaW5naWZpZXIuZXM2Il0sIm5hbWVzIjpbIlNjc3NTdHJpbmdpZmllciIsImNvbW1lbnQiLCJub2RlIiwibGVmdCIsInJhdyIsInJpZ2h0IiwicmF3cyIsImlubGluZSIsInRleHQiLCJidWlsZGVyIiwiZGVjbCIsInNlbWljb2xvbiIsImlzTmVzdGVkIiwiYmV0d2VlbiIsInN0cmluZyIsInByb3AiLCJyYXdWYWx1ZSIsImltcG9ydGFudCIsImFmdGVyIiwibm9kZXMiLCJsZW5ndGgiLCJib2R5Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7OztJQUVxQkEsZTs7Ozs7Ozs7OzhCQUVqQkMsTyxvQkFBUUMsSSxFQUFNO0FBQ1YsWUFBSUMsT0FBUSxLQUFLQyxHQUFMLENBQVNGLElBQVQsRUFBZSxNQUFmLEVBQXdCLGFBQXhCLENBQVo7QUFDQSxZQUFJRyxRQUFRLEtBQUtELEdBQUwsQ0FBU0YsSUFBVCxFQUFlLE9BQWYsRUFBd0IsY0FBeEIsQ0FBWjs7QUFFQSxZQUFLQSxLQUFLSSxJQUFMLENBQVVDLE1BQWYsRUFBd0I7QUFDcEIsZ0JBQUlDLE9BQU9OLEtBQUtJLElBQUwsQ0FBVUUsSUFBVixJQUFrQk4sS0FBS00sSUFBbEM7QUFDQSxpQkFBS0MsT0FBTCxDQUFhLE9BQU9OLElBQVAsR0FBY0ssSUFBZCxHQUFxQkgsS0FBbEMsRUFBeUNILElBQXpDO0FBQ0gsU0FIRCxNQUdPO0FBQ0gsaUJBQUtPLE9BQUwsQ0FBYSxPQUFPTixJQUFQLEdBQWNELEtBQUtNLElBQW5CLEdBQTBCSCxLQUExQixHQUFrQyxJQUEvQyxFQUFxREgsSUFBckQ7QUFDSDtBQUNKLEs7OzhCQUVEUSxJLGlCQUFLUixJLEVBQU1TLFMsRUFBVztBQUNsQixZQUFLLENBQUNULEtBQUtVLFFBQVgsRUFBc0I7QUFDbEIsbUNBQU1GLElBQU4sWUFBV1IsSUFBWCxFQUFpQlMsU0FBakI7QUFDSCxTQUZELE1BRU87O0FBRUgsZ0JBQUlFLFVBQVUsS0FBS1QsR0FBTCxDQUFTRixJQUFULEVBQWUsU0FBZixFQUEwQixPQUExQixDQUFkO0FBQ0EsZ0JBQUlZLFNBQVVaLEtBQUthLElBQUwsR0FBWUYsT0FBWixHQUFzQixLQUFLRyxRQUFMLENBQWNkLElBQWQsRUFBb0IsT0FBcEIsQ0FBcEM7QUFDQSxnQkFBS0EsS0FBS2UsU0FBVixFQUFzQjtBQUNsQkgsMEJBQVVaLEtBQUtJLElBQUwsQ0FBVVcsU0FBVixJQUF1QixhQUFqQztBQUNIOztBQUVELGlCQUFLUixPQUFMLENBQWFLLFNBQVMsR0FBdEIsRUFBMkJaLElBQTNCLEVBQWlDLE9BQWpDOztBQUVBLGdCQUFJZ0IsY0FBSjtBQUNBLGdCQUFLaEIsS0FBS2lCLEtBQUwsSUFBY2pCLEtBQUtpQixLQUFMLENBQVdDLE1BQTlCLEVBQXVDO0FBQ25DLHFCQUFLQyxJQUFMLENBQVVuQixJQUFWO0FBQ0FnQix3QkFBUSxLQUFLZCxHQUFMLENBQVNGLElBQVQsRUFBZSxPQUFmLENBQVI7QUFDSCxhQUhELE1BR087QUFDSGdCLHdCQUFRLEtBQUtkLEdBQUwsQ0FBU0YsSUFBVCxFQUFlLE9BQWYsRUFBd0IsV0FBeEIsQ0FBUjtBQUNIO0FBQ0QsZ0JBQUtnQixLQUFMLEVBQWEsS0FBS1QsT0FBTCxDQUFhUyxLQUFiO0FBQ2IsaUJBQUtULE9BQUwsQ0FBYSxHQUFiLEVBQWtCUCxJQUFsQixFQUF3QixLQUF4QjtBQUNIO0FBQ0osSzs7Ozs7a0JBckNnQkYsZSIsImZpbGUiOiJzY3NzLXN0cmluZ2lmaWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmluZ2lmaWVyIGZyb20gJ3Bvc3Rjc3MvbGliL3N0cmluZ2lmaWVyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nzc1N0cmluZ2lmaWVyIGV4dGVuZHMgU3RyaW5naWZpZXIge1xuXG4gICAgY29tbWVudChub2RlKSB7XG4gICAgICAgIGxldCBsZWZ0ICA9IHRoaXMucmF3KG5vZGUsICdsZWZ0JywgICdjb21tZW50TGVmdCcpO1xuICAgICAgICBsZXQgcmlnaHQgPSB0aGlzLnJhdyhub2RlLCAncmlnaHQnLCAnY29tbWVudFJpZ2h0Jyk7XG5cbiAgICAgICAgaWYgKCBub2RlLnJhd3MuaW5saW5lICkge1xuICAgICAgICAgICAgbGV0IHRleHQgPSBub2RlLnJhd3MudGV4dCB8fCBub2RlLnRleHQ7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkZXIoJy8vJyArIGxlZnQgKyB0ZXh0ICsgcmlnaHQsIG5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5idWlsZGVyKCcvKicgKyBsZWZ0ICsgbm9kZS50ZXh0ICsgcmlnaHQgKyAnKi8nLCBub2RlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRlY2wobm9kZSwgc2VtaWNvbG9uKSB7XG4gICAgICAgIGlmICggIW5vZGUuaXNOZXN0ZWQgKSB7XG4gICAgICAgICAgICBzdXBlci5kZWNsKG5vZGUsIHNlbWljb2xvbik7XG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGxldCBiZXR3ZWVuID0gdGhpcy5yYXcobm9kZSwgJ2JldHdlZW4nLCAnY29sb24nKTtcbiAgICAgICAgICAgIGxldCBzdHJpbmcgID0gbm9kZS5wcm9wICsgYmV0d2VlbiArIHRoaXMucmF3VmFsdWUobm9kZSwgJ3ZhbHVlJyk7XG4gICAgICAgICAgICBpZiAoIG5vZGUuaW1wb3J0YW50ICkge1xuICAgICAgICAgICAgICAgIHN0cmluZyArPSBub2RlLnJhd3MuaW1wb3J0YW50IHx8ICcgIWltcG9ydGFudCc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuYnVpbGRlcihzdHJpbmcgKyAneycsIG5vZGUsICdzdGFydCcpO1xuXG4gICAgICAgICAgICBsZXQgYWZ0ZXI7XG4gICAgICAgICAgICBpZiAoIG5vZGUubm9kZXMgJiYgbm9kZS5ub2Rlcy5sZW5ndGggKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ib2R5KG5vZGUpO1xuICAgICAgICAgICAgICAgIGFmdGVyID0gdGhpcy5yYXcobm9kZSwgJ2FmdGVyJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFmdGVyID0gdGhpcy5yYXcobm9kZSwgJ2FmdGVyJywgJ2VtcHR5Qm9keScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCBhZnRlciApIHRoaXMuYnVpbGRlcihhZnRlcik7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkZXIoJ30nLCBub2RlLCAnZW5kJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-parse.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = scssParse;\n\nvar _input = require('postcss/lib/input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _scssParser = require('./scss-parser');\n\nvar _scssParser2 = _interopRequireDefault(_scssParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction scssParse(scss, opts) {\n    var input = new _input2.default(scss, opts);\n\n    var parser = new _scssParser2.default(input);\n    parser.tokenize();\n    parser.loop();\n\n    return parser.root;\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjc3MtcGFyc2UuZXM2Il0sIm5hbWVzIjpbInNjc3NQYXJzZSIsInNjc3MiLCJvcHRzIiwiaW5wdXQiLCJwYXJzZXIiLCJ0b2tlbml6ZSIsImxvb3AiLCJyb290Il0sIm1hcHBpbmdzIjoiOzs7a0JBSXdCQSxTOztBQUp4Qjs7OztBQUVBOzs7Ozs7QUFFZSxTQUFTQSxTQUFULENBQW1CQyxJQUFuQixFQUF5QkMsSUFBekIsRUFBK0I7QUFDMUMsUUFBSUMsUUFBUSxvQkFBVUYsSUFBVixFQUFnQkMsSUFBaEIsQ0FBWjs7QUFFQSxRQUFJRSxTQUFTLHlCQUFlRCxLQUFmLENBQWI7QUFDQUMsV0FBT0MsUUFBUDtBQUNBRCxXQUFPRSxJQUFQOztBQUVBLFdBQU9GLE9BQU9HLElBQWQ7QUFDSCIsImZpbGUiOiJzY3NzLXBhcnNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IElucHV0IGZyb20gJ3Bvc3Rjc3MvbGliL2lucHV0JztcblxuaW1wb3J0IFNjc3NQYXJzZXIgZnJvbSAnLi9zY3NzLXBhcnNlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNjc3NQYXJzZShzY3NzLCBvcHRzKSB7XG4gICAgbGV0IGlucHV0ID0gbmV3IElucHV0KHNjc3MsIG9wdHMpO1xuXG4gICAgbGV0IHBhcnNlciA9IG5ldyBTY3NzUGFyc2VyKGlucHV0KTtcbiAgICBwYXJzZXIudG9rZW5pemUoKTtcbiAgICBwYXJzZXIubG9vcCgpO1xuXG4gICAgcmV0dXJuIHBhcnNlci5yb290O1xufVxuIl19\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-parser.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _comment = require('postcss/lib/comment');\n\nvar _comment2 = _interopRequireDefault(_comment);\n\nvar _parser = require('postcss/lib/parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _nestedDeclaration = require('./nested-declaration');\n\nvar _nestedDeclaration2 = _interopRequireDefault(_nestedDeclaration);\n\nvar _scssTokenize = require('./scss-tokenize');\n\nvar _scssTokenize2 = _interopRequireDefault(_scssTokenize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScssParser = function (_Parser) {\n    _inherits(ScssParser, _Parser);\n\n    function ScssParser() {\n        _classCallCheck(this, ScssParser);\n\n        return _possibleConstructorReturn(this, _Parser.apply(this, arguments));\n    }\n\n    ScssParser.prototype.tokenize = function tokenize() {\n        this.tokens = (0, _scssTokenize2.default)(this.input);\n    };\n\n    ScssParser.prototype.rule = function rule(tokens) {\n        var withColon = false;\n        var brackets = 0;\n        var value = '';\n        for (var _iterator = tokens, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var _i2 = _ref;\n\n            if (withColon) {\n                if (_i2[0] !== 'comment' && _i2[0] !== '{') {\n                    value += _i2[1];\n                }\n            } else if (_i2[0] === 'space' && _i2[1].indexOf('\\n') !== -1) {\n                break;\n            } else if (_i2[0] === '(') {\n                brackets += 1;\n            } else if (_i2[0] === ')') {\n                brackets -= 1;\n            } else if (brackets === 0 && _i2[0] === ':') {\n                withColon = true;\n            }\n        }\n\n        if (!withColon || value.trim() === '' || /^[a-zA-Z-:#]/.test(value)) {\n            _Parser.prototype.rule.call(this, tokens);\n        } else {\n\n            tokens.pop();\n            var node = new _nestedDeclaration2.default();\n            this.init(node);\n\n            var last = tokens[tokens.length - 1];\n            if (last[4]) {\n                node.source.end = { line: last[4], column: last[5] };\n            } else {\n                node.source.end = { line: last[2], column: last[3] };\n            }\n\n            while (tokens[0][0] !== 'word') {\n                node.raws.before += tokens.shift()[1];\n            }\n            node.source.start = { line: tokens[0][2], column: tokens[0][3] };\n\n            node.prop = '';\n            while (tokens.length) {\n                var type = tokens[0][0];\n                if (type === ':' || type === 'space' || type === 'comment') {\n                    break;\n                }\n                node.prop += tokens.shift()[1];\n            }\n\n            node.raws.between = '';\n\n            var token = void 0;\n            while (tokens.length) {\n                token = tokens.shift();\n\n                if (token[0] === ':') {\n                    node.raws.between += token[1];\n                    break;\n                } else {\n                    node.raws.between += token[1];\n                }\n            }\n\n            if (node.prop[0] === '_' || node.prop[0] === '*') {\n                node.raws.before += node.prop[0];\n                node.prop = node.prop.slice(1);\n            }\n            node.raws.between += this.spacesAndCommentsFromStart(tokens);\n            this.precheckMissedSemicolon(tokens);\n\n            for (var i = tokens.length - 1; i > 0; i--) {\n                token = tokens[i];\n                if (token[1] === '!important') {\n                    node.important = true;\n                    var string = this.stringFrom(tokens, i);\n                    string = this.spacesFromEnd(tokens) + string;\n                    if (string !== ' !important') {\n                        node.raws.important = string;\n                    }\n                    break;\n                } else if (token[1] === 'important') {\n                    var cache = tokens.slice(0);\n                    var str = '';\n                    for (var j = i; j > 0; j--) {\n                        var _type = cache[j][0];\n                        if (str.trim().indexOf('!') === 0 && _type !== 'space') {\n                            break;\n                        }\n                        str = cache.pop()[1] + str;\n                    }\n                    if (str.trim().indexOf('!') === 0) {\n                        node.important = true;\n                        node.raws.important = str;\n                        tokens = cache;\n                    }\n                }\n\n                if (token[0] !== 'space' && token[0] !== 'comment') {\n                    break;\n                }\n            }\n\n            this.raw(node, 'value', tokens);\n\n            if (node.value.indexOf(':') !== -1) {\n                this.checkMissedSemicolon(tokens);\n            }\n\n            this.current = node;\n        }\n    };\n\n    ScssParser.prototype.comment = function comment(token) {\n        if (token[6] === 'inline') {\n            var node = new _comment2.default();\n            this.init(node, token[2], token[3]);\n            node.raws.inline = true;\n            node.source.end = { line: token[4], column: token[5] };\n\n            var text = token[1].slice(2);\n            if (/^\\s*$/.test(text)) {\n                node.text = '';\n                node.raws.left = text;\n                node.raws.right = '';\n            } else {\n                var match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/);\n                var fixed = match[2].replace(/(\\*\\/|\\/\\*)/g, '*//*');\n                node.text = fixed;\n                node.raws.left = match[1];\n                node.raws.right = match[3];\n                node.raws.text = match[2];\n            }\n        } else {\n            _Parser.prototype.comment.call(this, token);\n        }\n    };\n\n    return ScssParser;\n}(_parser2.default);\n\nexports.default = ScssParser;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/nested-declaration.js":"'use strict';\n\nexports.__esModule = true;\n\nvar _container = require('postcss/lib/container');\n\nvar _container2 = _interopRequireDefault(_container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NestedDeclaration = function (_Container) {\n    _inherits(NestedDeclaration, _Container);\n\n    function NestedDeclaration(defaults) {\n        _classCallCheck(this, NestedDeclaration);\n\n        var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));\n\n        _this.type = 'decl';\n        _this.isNested = true;\n        if (!_this.nodes) _this.nodes = [];\n        return _this;\n    }\n\n    return NestedDeclaration;\n}(_container2.default);\n\nexports.default = NestedDeclaration;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5lc3RlZC1kZWNsYXJhdGlvbi5lczYiXSwibmFtZXMiOlsiTmVzdGVkRGVjbGFyYXRpb24iLCJkZWZhdWx0cyIsInR5cGUiLCJpc05lc3RlZCIsIm5vZGVzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7OztJQUVNQSxpQjs7O0FBRUYsK0JBQVlDLFFBQVosRUFBc0I7QUFBQTs7QUFBQSxxREFDbEIsc0JBQU1BLFFBQU4sQ0FEa0I7O0FBRWxCLGNBQUtDLElBQUwsR0FBZ0IsTUFBaEI7QUFDQSxjQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsWUFBSyxDQUFDLE1BQUtDLEtBQVgsRUFBbUIsTUFBS0EsS0FBTCxHQUFhLEVBQWI7QUFKRDtBQUtyQjs7Ozs7a0JBSVVKLGlCIiwiZmlsZSI6Im5lc3RlZC1kZWNsYXJhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250YWluZXIgZnJvbSAncG9zdGNzcy9saWIvY29udGFpbmVyJztcblxuY2xhc3MgTmVzdGVkRGVjbGFyYXRpb24gZXh0ZW5kcyBDb250YWluZXIge1xuXG4gICAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICAgICAgc3VwZXIoZGVmYXVsdHMpO1xuICAgICAgICB0aGlzLnR5cGUgICAgID0gJ2RlY2wnO1xuICAgICAgICB0aGlzLmlzTmVzdGVkID0gdHJ1ZTtcbiAgICAgICAgaWYgKCAhdGhpcy5ub2RlcyApIHRoaXMubm9kZXMgPSBbXTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTmVzdGVkRGVjbGFyYXRpb247XG4iXX0=\n","/home/travis/build/npmtest/node-npmtest-postcss-scss/node_modules/postcss-scss/lib/scss-tokenize.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = scssTokenize;\nvar SINGLE_QUOTE = 39;\nvar DOUBLE_QUOTE = 34;\nvar BACKSLASH = 92;\nvar SLASH = 47;\nvar NEWLINE = 10;\nvar SPACE = 32;\nvar FEED = 12;\nvar TAB = 9;\nvar CR = 13;\nvar OPEN_SQUARE = 91;\nvar CLOSE_SQUARE = 93;\nvar OPEN_PARENTHESES = 40;\nvar CLOSE_PARENTHESES = 41;\nvar OPEN_CURLY = 123;\nvar CLOSE_CURLY = 125;\nvar SEMICOLON = 59;\nvar ASTERICK = 42;\nvar COLON = 58;\nvar AT = 64;\n\n// SCSS PATCH {\nvar COMMA = 44;\nvar HASH = 35;\n// } SCSS PATCH\n\nvar RE_AT_END = /[ \\n\\t\\r\\f\\{\\(\\)'\"\\\\;/\\[\\]#]/g;\nvar RE_WORD_END = /[ \\n\\t\\r\\f\\(\\)\\{\\}:;@!'\"\\\\\\]\\[#]|\\/(?=\\*)/g;\nvar RE_BAD_BRACKET = /.[\\\\\\/\\(\"'\\n]/;\n\nvar RE_NEW_LINE = /[\\r\\f\\n]/g; // SCSS PATCH\n\n// SCSS PATCH function name was changed\nfunction scssTokenize(input) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var tokens = [];\n    var css = input.css.valueOf();\n\n    var ignore = options.ignoreErrors;\n\n    var code = void 0,\n        next = void 0,\n        quote = void 0,\n        lines = void 0,\n        last = void 0,\n        content = void 0,\n        escape = void 0,\n        nextLine = void 0,\n        nextOffset = void 0,\n        escaped = void 0,\n        escapePos = void 0,\n        prev = void 0,\n        n = void 0;\n\n    var brackets = void 0; // SCSS PATCH\n\n    var length = css.length;\n    var offset = -1;\n    var line = 1;\n    var pos = 0;\n\n    function unclosed(what) {\n        throw input.error('Unclosed ' + what, line, pos - offset);\n    }\n\n    while (pos < length) {\n        code = css.charCodeAt(pos);\n\n        if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {\n            offset = pos;\n            line += 1;\n        }\n\n        switch (code) {\n            case NEWLINE:\n            case SPACE:\n            case TAB:\n            case CR:\n            case FEED:\n                next = pos;\n                do {\n                    next += 1;\n                    code = css.charCodeAt(next);\n                    if (code === NEWLINE) {\n                        offset = next;\n                        line += 1;\n                    }\n                } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n\n                tokens.push(['space', css.slice(pos, next)]);\n                pos = next - 1;\n                break;\n\n            case OPEN_SQUARE:\n                tokens.push(['[', '[', line, pos - offset]);\n                break;\n\n            case CLOSE_SQUARE:\n                tokens.push([']', ']', line, pos - offset]);\n                break;\n\n            case OPEN_CURLY:\n                tokens.push(['{', '{', line, pos - offset]);\n                break;\n\n            case CLOSE_CURLY:\n                tokens.push(['}', '}', line, pos - offset]);\n                break;\n\n            // SCSS PATCH {\n            case COMMA:\n                tokens.push(['word', ',', line, pos - offset, line, pos - offset + 1]);\n                break;\n            // } SCSS PATCH\n\n            case COLON:\n                tokens.push([':', ':', line, pos - offset]);\n                break;\n\n            case SEMICOLON:\n                tokens.push([';', ';', line, pos - offset]);\n                break;\n\n            case OPEN_PARENTHESES:\n                prev = tokens.length ? tokens[tokens.length - 1][1] : '';\n                n = css.charCodeAt(pos + 1);\n                if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n                    // SCSS PATCH {\n                    brackets = 1;\n                    escaped = false;\n                    next = pos + 1;\n                    while (next <= css.length - 1) {\n                        n = css.charCodeAt(next);\n                        if (n === BACKSLASH) {\n                            escaped = !escaped;\n                        } else if (n === OPEN_PARENTHESES) {\n                            brackets += 1;\n                        } else if (n === CLOSE_PARENTHESES) {\n                            brackets -= 1;\n                            if (brackets === 0) break;\n                        }\n                        next += 1;\n                    }\n                    // } SCSS PATCH\n\n                    tokens.push(['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);\n                    pos = next;\n                } else {\n                    next = css.indexOf(')', pos + 1);\n                    content = css.slice(pos, next + 1);\n\n                    if (next === -1 || RE_BAD_BRACKET.test(content)) {\n                        tokens.push(['(', '(', line, pos - offset]);\n                    } else {\n                        tokens.push(['brackets', content, line, pos - offset, line, next - offset]);\n                        pos = next;\n                    }\n                }\n\n                break;\n\n            case CLOSE_PARENTHESES:\n                tokens.push([')', ')', line, pos - offset]);\n                break;\n\n            case SINGLE_QUOTE:\n            case DOUBLE_QUOTE:\n                quote = code === SINGLE_QUOTE ? '\\'' : '\"';\n                next = pos;\n                do {\n                    escaped = false;\n                    next = css.indexOf(quote, next + 1);\n                    if (next === -1) {\n                        if (ignore) {\n                            next = pos + 1;\n                            break;\n                        } else {\n                            unclosed('quote');\n                        }\n                    }\n                    escapePos = next;\n                    while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n                        escapePos -= 1;\n                        escaped = !escaped;\n                    }\n                } while (escaped);\n\n                content = css.slice(pos, next + 1);\n                lines = content.split('\\n');\n                last = lines.length - 1;\n\n                if (last > 0) {\n                    nextLine = line + last;\n                    nextOffset = next - lines[last].length;\n                } else {\n                    nextLine = line;\n                    nextOffset = offset;\n                }\n\n                tokens.push(['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset]);\n\n                offset = nextOffset;\n                line = nextLine;\n                pos = next;\n                break;\n\n            case AT:\n                RE_AT_END.lastIndex = pos + 1;\n                RE_AT_END.test(css);\n                if (RE_AT_END.lastIndex === 0) {\n                    next = css.length - 1;\n                } else {\n                    next = RE_AT_END.lastIndex - 2;\n                }\n                tokens.push(['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);\n                pos = next;\n                break;\n\n            case BACKSLASH:\n                next = pos;\n                escape = true;\n                while (css.charCodeAt(next + 1) === BACKSLASH) {\n                    next += 1;\n                    escape = !escape;\n                }\n                code = css.charCodeAt(next + 1);\n                if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n                    next += 1;\n                }\n                tokens.push(['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);\n                pos = next;\n                break;\n\n            default:\n                // SCSS PATCH {\n                n = css.charCodeAt(pos + 1);\n\n                if (code === HASH && n === OPEN_CURLY) {\n                    var deep = 1;\n                    next = pos;\n                    while (deep > 0) {\n                        next += 1;\n                        if (css.length <= next) unclosed('interpolation');\n\n                        code = css.charCodeAt(next);\n                        n = css.charCodeAt(next + 1);\n\n                        if (code === CLOSE_CURLY) {\n                            deep -= 1;\n                        } else if (code === HASH && n === OPEN_CURLY) {\n                            deep += 1;\n                        }\n                    }\n\n                    content = css.slice(pos, next + 1);\n                    lines = content.split('\\n');\n                    last = lines.length - 1;\n\n                    if (last > 0) {\n                        nextLine = line + last;\n                        nextOffset = next - lines[last].length;\n                    } else {\n                        nextLine = line;\n                        nextOffset = offset;\n                    }\n\n                    tokens.push(['word', content, line, pos - offset, nextLine, next - nextOffset]);\n\n                    offset = nextOffset;\n                    line = nextLine;\n                    pos = next;\n                } else if (code === SLASH && n === ASTERICK) {\n                    // } SCSS PATCH\n\n                    next = css.indexOf('*/', pos + 2) + 1;\n                    if (next === 0) {\n                        if (ignore) {\n                            next = css.length;\n                        } else {\n                            unclosed('comment');\n                        }\n                    }\n\n                    content = css.slice(pos, next + 1);\n                    lines = content.split('\\n');\n                    last = lines.length - 1;\n\n                    if (last > 0) {\n                        nextLine = line + last;\n                        nextOffset = next - lines[last].length;\n                    } else {\n                        nextLine = line;\n                        nextOffset = offset;\n                    }\n\n                    tokens.push(['comment', content, line, pos - offset, nextLine, next - nextOffset]);\n\n                    offset = nextOffset;\n                    line = nextLine;\n                    pos = next;\n\n                    // SCSS PATCH {\n                } else if (code === SLASH && n === SLASH) {\n                    RE_NEW_LINE.lastIndex = pos + 1;\n                    RE_NEW_LINE.test(css);\n                    if (RE_NEW_LINE.lastIndex === 0) {\n                        next = css.length - 1;\n                    } else {\n                        next = RE_NEW_LINE.lastIndex - 2;\n                    }\n\n                    content = css.slice(pos, next + 1);\n\n                    tokens.push(['comment', content, line, pos - offset, line, next - offset, 'inline']);\n\n                    pos = next;\n                    // } SCSS PATCH\n                } else {\n                    RE_WORD_END.lastIndex = pos + 1;\n                    RE_WORD_END.test(css);\n                    if (RE_WORD_END.lastIndex === 0) {\n                        next = css.length - 1;\n                    } else {\n                        next = RE_WORD_END.lastIndex - 2;\n                    }\n\n                    tokens.push(['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);\n                    pos = next;\n                }\n\n                break;\n        }\n\n        pos++;\n    }\n\n    return tokens;\n}\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n"}